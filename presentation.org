#+Title: Org-mode all the thingz!
#+Author: Nick Anderson
#+Email: nick@cmdln.org
#+PROPERTY: header-args:cfengine3+ :eval never-export
# Export cfengine code block execution output by default
#+PROPERTY: header-args:cfengine3+ :exports both
#+PROPERTY: header-args:sh+ :eval never-export
#+PROPERTY: header-args:shell+ :eval never-export
#+OPTIONS: reveal_center:t reveal_progress:t reveal_history:nil reveal_control:t
#+OPTIONS: reveal_rolling_links:t reveal_keyboard:t reveal_overview:t num:nil
#+OPTIONS: reveal_width:1200 reveal_height:800 tags:nil
# The TOC is a bit much for a slide show IMHO, but maybe you want it when exporting to html
#+OPTIONS: toc:nil
#+REVEAL_MARGIN: 0.1
#+REVEAL_MIN_SCALE: 0.5
#+REVEAL_MAX_SCALE: 2.5
# Available Transitions: default|cube|page|concave|zoom|linear|fade|none.
#+REVEAL_TRANS: fade
#+REVEAL_THEME: night
# This flattens up to x levels deep
#+REVEAL_HLEVEL: 1
#+REVEAL_HEAD_PREAMBLE: <meta name=description" content=Org-mode all the thingz!">
#+REVEAL_POSTAMBLE: <p> Created by Nick Anderson. </p>
#+REVEAL_PLUGINS: (notes)
#+OPTIONS: reveal_single_file:nil

#+DOWNLOADED: https://upload.wikimedia.org/wikipedia/commons/thumb/a/a6/Org-mode-unicorn.svg/800px-Org-mode-unicorn.svg.png @ 2019-07-19 16:43:44
* org-mode                                                           :ATTACH:
:PROPERTIES:
:ID:       bb93dd07-28b1-405c-91c6-413a49d649e9
:REVEAL_BACKGROUND: ./data/bb/93dd07-28b1-405c-91c6-413a49d649e9/800px-Org-mode-unicorn.svg_2019-07-19_16-43-44.png
:REVEAL_BACKGROUND_OPACITY: 0.5
:REVEAL_BACKGROUND_SIZE: 800px
:Attachments: 800px-Org-mode-unicorn.svg_2019-07-19_16-43-44.png
:END:

#+BEGIN_NOTES
  I think the logo being a magical creature is quite fitting.
#+END_NOTES

** What is it?
- around since 2003
- markup language
- best supported in emacs
- system for managing plain text
- a second brain or exocortex

*** An aside for non emacs users

- [[https://github.com/axvr/org.vim][org.vim]], [[https://github.com/jceb/vim-orgmode][vim-orgmode]], [[https://packagecontrol.io/packages/orgmode][org-mode for Sublime Text 2 & 3]], [[https://github.com/vscode-org-mode/vscode-org-mode][vscode-org-mode]], [[https://atom.io/packages/org-mode][Atom grammar for org-mode syntax]]
- [[https://spacemacs.org][spacemacs]], [[https://github.com/hlissner/doom-emacs][doom-emacs]]

#+BEGIN_NOTES
  - I think it was 2005 when I first tried org-mode.
  - I was already a vim user, i couldn't figure out how to quit emacs
  - I couldn't manage to get any vi like keybindings working well and it didnt stick
  - Around 2013 I tried again, i still didn't get vim keybindings working, but i lerned enough emacs for org-mode and stuck with it for months before my usage faded
  - By 2014 I finally managed to get evil-mode working pretty well and was all in on org-mode
  - And in 2015 I tried spacemacs.
  - I was comfortable within weeks, and within months I was completely converted
  - In 2017 I released ob-cfengine3
#+END_NOTES

** What is it for?
:PROPERTIES:
:ID:       f69170b3-8d72-439d-b3b7-6f0358fb361b
:END:
- task manager/planner
- authoring/outlining documents
- keeping notes, maintaining todo lists, planning projects
** Things I do, what interests you?

#+BEGIN_NOTES
- Worklog/Literate Ops
  - capture & templates
  - Time tracking
  - Jira Tickets
    - ox-jira
    - org-jira
- Notes
  - Deft
- Email
  - mu4e
  - mbsync
  - org-mime-htmlize
- Journal
- Presentations
  - org-reveal, org-re-reveal
  - ox-reveal, ox-
- Task management/Calendaring
  - Agenda
  - org-cal-dav
- Contact management
- Executing code
- Memorization
- Diagrams/Flow charts
- Tables/Spreadsheets
- Going mobile
  - Andoird :: orgzly, mobileorg, Organic
  - iOS :: beorg, mobileorg

Opens up a world of other tings
- git
- Chat
Worklog/Literate DevOps/capture
Languages
Psql
Notes
Image download
Screenshot
Camcorder.el
Journaling
Email
Reports
Blogging
Jira
Git
Orgit (links)
Rebasing
Branching
Cherry picking
Timeline
github pull requests
Github gist
Presentations
Tables
Task manager
Calendar
Agenda
Weechat/erc/matrix
Contacts
Memorizing
Diagrams /flow charts
#+END_NOTES

* Worklog/Literate *Ops
** org-capture                                                      :ATTACH:
:PROPERTIES:
:ID:       24700353-3d1f-4b94-ac5b-246959ef426f
:Attachments: Screenshot_20190724_141502_2019-07-24_14-15-31.png
:END:

#+DOWNLOADED: file:///tmp/Spectacle.gJklMb/Screenshot_20190724_141502.png @ 2019-07-24 14:15:36
[[file:data/24/700353-3d1f-4b94-ac5b-246959ef426f/Screenshot_20190724_141502_2019-07-24_14-15-31.png]]
- Capture something you need without breaking your flow

#+BEGIN_NOTES
  While running eshell on a remote server, I notice our Rakefile has a spelling
  mistake. Since I should fix that (just not now), I quickly start org-capture
  (specifying a “Bug”), and jot the details for a bug fix at the end of the day.
  
  - *this is a good place to start*
#+END_NOTES

*** org-capture supports sub menus                                 :ATTACH:
:PROPERTIES:
:ID:       e1b4ffc3-d90b-4db1-8e0b-7330f16a70f0
:Attachments: Screenshot_20190724_141639_2019-07-24_14-16-45.png
:END:

#+DOWNLOADED: file:///tmp/Spectacle.gJklMb/Screenshot_20190724_141639.png @ 2019-07-24 14:16:45
[[file:data/e1/b4ffc3-d90b-4db1-8e0b-7330f16a70f0/Screenshot_20190724_141639_2019-07-24_14-16-45.png]]

*** templates improve speed and consistency

*** Example meeting template

#+CAPTION: Template in defvar
#+BEGIN_SRC elisp
      ;; BEGIN Capture Templates
      ;; I picked up this neat trick from the Venerable Sacha Chua
      (defvar my/org-meeting-template-planning "* %u Meeting About CFEngine Planning   %^G
  CREATED: %U

  ,*Agenda:*
   - Demos
   - Review work in progress
   - Review newly registered issues
   - [[https://tracker.mender.io/secure/RapidBoard.jspa?rapidView=26][CFEngine Kanban board]]

  ,** Demos
  ,** WIP
  ,** New Issues


  " "Meeting Template - Planning")
#+END_SRC

#+BEGIN_NOTES
- =%u= :: /inactive/ timestamp, date only
- =%^G= :: Prompt for tags, with completion all tags in all agenda files
- =%U= :: /inactive/ timestamp, with date and time

Active timestamps (those wrapped with =<= and =>= will not trigger an entry to show up in the agenda.
#+END_NOTES

*** Configuring capture templates

#+CAPTION: Configure custom capture templates
#+BEGIN_SRC elisp
  ;; Configure custom capture templates
  (setq org-capture-templates
        `(;; Note the backtick here, it's required so that the defvar based tempaltes will work!
          ;;http://comments.gmane.org/gmane.emacs.orgmode/106890

          ;; I have lot's of meetings, so lets have a submenu
          ("m" "Meetings" )
          ("mp" "Meeting - Planning/Review" entry (file "~/org/Work/northern.tech/development-meetings.org" )
           ,my/org-meeting-template-planning :clock-in t :clock-resume t :append t :empty-lines-after 1)
          ))
#+END_SRC

#+BEGIN_NOTES
- =:clock-in t=  :: Clock in when capture begins
- =:clock-resume t= :: Resume previously running clock when capture ends
- =:append t= :: Append capture to end of entry
- =:empty-lines-after 1= :: The number of empty lines to have at the end of a capture
#+END_NOTES

** Time Tracking                                                    :ATTACH:
:PROPERTIES:
:ID:       89370a5e-e413-4d19-9a03-a487e32ae9a8
:Attachments: Screenshot_20190724_141926_2019-07-24_14-20-07.png Screenshot_20190724_142033_2019-07-24_14-20-42.png
:END:

- ~org-clock-in~, ~org-clock-out~, ~org-clock-goto~, ~org-clock-report~, ~org-clock-resolve-clocks~

*** Clocking in and out of tasks

#+DOWNLOADED: file:///tmp/Spectacle.gJklMb/Screenshot_20190724_142033.png @ 2019-07-24 14:20:43
[[file:data/89/370a5e-e413-4d19-9a03-a487e32ae9a8/Screenshot_20190724_142033_2019-07-24_14-20-42.png]]

*** Clock Reports

#+DOWNLOADED: file:///tmp/Spectacle.gJklMb/Screenshot_20190724_141926.png @ 2019-07-24 14:20:07
[[file:data/89/370a5e-e413-4d19-9a03-a487e32ae9a8/Screenshot_20190724_141926_2019-07-24_14-20-07.png]]

** Jira                                                             :ATTACH:
:PROPERTIES:
:ID:       918b2587-dafd-4bce-bd7d-0dce9866a465
:Attachments: dos-jira-logo_2019-07-24_15-17-28.png org-jira-demo-update-comment-2019-08-01_15.33.51_2019-08-01_15-38-21.gif
:END:

#+CAPTION: Using org-jira
#+DOWNLOADED: file:///home/nickanderson/Videos/screencasts/org-jira-demo-update-comment-2019-08-01_15.33.51.gif @ 2019-08-01 15:38:25
[[file:data/91/8b2587-dafd-4bce-bd7d-0dce9866a465/org-jira-demo-update-comment-2019-08-01_15.33.51_2019-08-01_15-38-21.gif]]

- [[https://github.com/stig/ox-jira.el][ox-jira]], [[https://github.com/ahungry/org-jira][org-jira]]

#+BEGIN_NOTES
  - ox-jira :: exports to jira syntax. Make your tickets and comments beautiful!
  - org-jira :: Modify tickets directly within org-mode or quickly jump to an
                issue in the web ui
#+END_NOTES
** Screenshot/Cast
- =org-download= ::  ~org-download-screenshot~, drag and drop,
- =camcorder= :: start and stop screen recording, convert to gif
#+BEGIN_NOTES
  While working on graphical user interfaces, it can be helpful to quickly pull screen shots into notes.
#+END_NOTES
* Notes
** Deft                                                             :ATTACH:
:PROPERTIES:
:ID:       c96d3588-2eaa-4fbc-961e-20921c5960d4
:Attachments: screenshot_2019-07-24_15-29-32.png
:END:

- For one file per note organization (kind of like Evernote)

#+DOWNLOADED: /tmp/screenshot.png @ 2019-07-24 15:29:36
[[file:data/c9/6d3588-2eaa-4fbc-961e-20921c5960d4/screenshot_2019-07-24_15-29-32.png]]

* Code blocks

#+BEGIN_NOTES
  - Literate Programming
  - Reproducible research
  - Jupyter notebook
#+END_NOTES

** CFEngine

#+BEGIN_SRC org
  ,#+NAME:CFEngine-hello-world
  ,#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :run-with-main t
    reports: 'CFEngine says "Hello, World!"'; 
  ,#+END_SRC

  ,#+RESULTS: CFEngine-hello-world
  : R: CFEngine says "Hello, World!"
#+END_SRC

** Python

#+BEGIN_SRC org
  ,#+BEGIN_SRC python :results output
    print("Python says \"Hello, World!\"") 
  ,#+END_SRC

  ,#+RESULTS:
  : Python says "Hello, World!"
#+END_SRC

** Shell

#+BEGIN_SRC org
  ,#+BEGIN_SRC sh :results output
    echo "$SHELL says \"Hello, World!\"" 
  ,#+END_SRC

  ,#+RESULTS:
  : /usr/bin/zsh says "Hello, World!"
#+END_SRC

** Reusing results

#+BEGIN_SRC org
  ,#+BEGIN_SRC sh :results output :var INPUT=CFEngine-hello-world
    echo "$INPUT" 
  ,#+END_SRC

  ,#+RESULTS:
  : R: CFEngine says "Hello, World!"
  : 
#+END_SRC

** Remote execution

#+BEGIN_SRC  org
  ,#+CAPTION: SQL in org-mode SRC block
  ,#+BEGIN_SRC sql :exports both :dir /ssh:user@remote: :engine postgresql :database cfdb
    SELECT firstreporttimestamp from __hosts limit 1
  ,#+END_SRC

  ,#+RESULTS:
  | firstreporttimestamp         |
  |------------------------------|
  | 2019-02-15 19:49:57.74915+00 |
#+END_SRC

#+BEGIN_NOTES
  - dir
  - tangle
#+END_NOTES

** Diagrams

#+RESULTS: MPF-policy-execution-high-level-diagram
[[file:MPF-policy-execution-high-level.png]]

*** PlantUML Source 

#+NAME: MPF-policy-execution-high-level-diagram
#+begin_src plantuml :file MPF-policy-execution-high-level.png
  title High Level MPF Policy Execution Sequence

  create "cf-execd"
  loop "Check ""body executor control schedule"""
    note left of "cf-execd"
      cf-execd checks the schedule once a minute, but the default schedule results
      in execution once every 5 minutes.
    end note

    alt "At least one element evaluates true"
      create "cf-agent -f update.cf"
      "cf-execd"->"cf-agent -f update.cf": Update Policy Execution
      alt """masterfiles/cf_promises_validated"" differs\nfrom ""intputs/cf_promises_validated"""
        note over "cf-agent -f update.cf"
          Copy masterfiles to inputs
        end note
      end
      note over "cf-agent -f update.cf"
        Execute bundles from Augments listed in
        ""vars.common_control_update_bundlesequence_end""
      end note

      destroy "cf-agent -f update.cf"
      create "cf-agent -f promises.cf"
      "cf-execd"->"cf-agent -f promises.cf": Normal Policy Execution
      note over "cf-agent -f promises.cf"
        Resolve inventory (inventory/*.cf)
      end note
      note over "cf-agent -f promises.cf"
        Resolve bundle common def (controls/def.cf)
      end note
      alt "services_autorun defined"
        note over "cf-agent -f promises.cf"
          Execute bundles tagged autorun in lexical order
        end note
      end
      note over "cf-agent -f promises.cf"
        Execute custom policy integrated into
        ""servies/main.cf""
      end note
      note over "cf-agent -f promises.cf"
        Execute bundles from Augments listed in
        ""vars.common_control_bundlesequence_end""
      end note
      destroy "cf-agent -f promises.cf"
    end
    ... 1 minute ...
  end
#+end_src

* Exporting
** HTML Theme Readtheorg
:PROPERTIES:
:ID:       ca042dbe-ca4b-47b3-a8c6-533a5147330f
:Attachments: readtheorg_2019-08-01_14-53-27.png readtheorg_2019-08-01_14-53-43.png
:END:

#+DOWNLOADED: https://github.com/fniessen/org-html-themes/blob/master/readtheorg.png?raw=true @ 2019-08-01 14:53:46
[[file:data/ca/042dbe-ca4b-47b3-a8c6-533a5147330f/readtheorg_2019-08-01_14-53-43.png]]

** HTML Theme BigBlow                                               :ATTACH:
:PROPERTIES:
:ID:       ebd1e5f2-63c0-47b1-80c2-e9db267fc3b1
:Attachments: bigblow_2019-08-01_14-54-44.png
:END:

#+DOWNLOADED: https://github.com/fniessen/org-html-themes/blob/master/bigblow.png?raw=true @ 2019-08-01 14:54:47
[[file:data/eb/d1e5f2-63c0-47b1-80c2-e9db267fc3b1/bigblow_2019-08-01_14-54-44.png]]

** PDF                                                              :ATTACH:
:PROPERTIES:
:ID:       61454799-4f5f-4753-b159-83400115a18c
:Attachments: finished-styled-spec-pdf_2019-08-01_15-15-31.png
:END:

#+DOWNLOADED: https://katherine.cox-buday.com/assets/blog/2015/03/14/writing-specs-with-org-mode/finished-styled-spec-pdf.png @ 2019-08-01 15:15:38
[[file:data/61/454799-4f5f-4753-b159-83400115a18c/finished-styled-spec-pdf_2019-08-01_15-15-31.png]]

* Email

- [[https://www.djcbsoftware.nl/code/mu/mu4e.html][mu4e]], [[https://notmuchmail.org/notmuch-emacs/][notmuch]], [[https://github.com/org-mime/org-mime][org-mime]]

** mu4e                                                             :ATTACH:
:PROPERTIES:
:ID:       f7f826c5-78c1-4c1f-8d4c-6993a88bfb2f
:Attachments: Screenshot_20190724_153130_2019-07-24_15-31-48.png
:END:

#+DOWNLOADED: file:///tmp/Spectacle.jWjoFC/Screenshot_20190724_153130.png @ 2019-07-24 15:31:48
[[file:data/f7/f826c5-78c1-4c1f-8d4c-6993a88bfb2f/Screenshot_20190724_153130_2019-07-24_15-31-48.png]]

#+BEGIN_NOTES
  - mbsync used to sync imap mail offline
  - postfix used for offline sending
  - Capture emails to respond
  - Author in org-mode, htmlize with org-mime-htmlize before sending
#+END_NOTES

* Keeping Secrets
- Tag entries with =crypt= to automatically encrypt sections of a file with GPG
- ~org-decrypt-entry~
** For my eyes only :crypt:
-----BEGIN PGP MESSAGE-----

hQIMA/jYNcPWXvJ6ARAAygauqE6m4hK1h2LX/P43L1kXoaVyIdpge9RKFbejEDho
SokDEGtdshtUatiQmcqMiTDhnL+1B6gjMMXhdG5J0VmigXghY8+NyYN9ndKfDi09
Vd68XxP36X/EKDS4oH+0CrtiWR4UojX9GW7xA6wdIRP7spR3Lc4bRNcIxbLhNr59
JDAM2u5yQE4rRhlwjbzUNF5QGrmY1UKL3gOklfGBZdpIs7EI14n24WBQJTP4cmi0
nAKY3NzvUyj4r+BF2g1Bx21lusuwPH3NXSkgjmHK4yZrGNyQXr1Xnv30pHls5Zvr
j8IFAxpQ6sSw9CEI11uAhBx/CZUYSosHy36njUOsoLU8Muu0r6GruU8zDPmo47Qj
q4tq3GVi/BgFds+vSMMHyom8gmTLK82WuETF/CPIkrdIIkpt9zTCRTzkeRF1U9LE
33PHKWsPji3wAjt0KrSArnRTGDI9qEJDU0rtouT1d5GIN8nzUJw8Np/GTPQ/SNR9
nyxPhevEzCCXGxBDf6cYjQpqMJuqGUmHhq8MzhuyAAXVOB5L0eirdPE+bczWNHrM
xcVZr7Ofb6bJQYWy2FG0VWz28wFnhw75v9fEdPpyDAhMsn9TU/g15Shh72Hy+MGM
G4X3iC5fdmnXjOz3Ig3cNIMFTyIgNL0RMUZEyoXJ4AC8KrulQnAPgxFORvHjmRzS
UAF4y/iDJia45wGWIC+6J+seIRKx65ZX2gtCc/LFCGx1LEYuPqFTTkwa+Pw52DVa
9P1MogqpjoOuCKjEqXKwqGBexsLkxSgQXbDUnuNcvTaE
=Lxf/
-----END PGP MESSAGE-----
* Blogging
- [[https://ox-hugo.scripter.co/][ox-hugo]], [[https://github.com/masasam/emacs-easy-hugo][easy-hugo]], [[https://github.com/org2blog/org2blog][org2blog]] (WordPress), [[https://orgmode.org/worg/org-blog-wiki.html][many options]]
- *hugo supports org syntax naively*, so I just use that.
* Journaling
** org-journal                                                      :ATTACH:
:PROPERTIES:
:ID:       949d28e2-18db-480b-b48a-3dd7bc6c318f
:Attachments: Screenshot_20190724_154046_2019-07-24_15-41-05.png
:END:

#+CAPTION: calendar colors days that have journal entries
#+DOWNLOADED: file:///tmp/Spectacle.jWjoFC/Screenshot_20190724_154046.png @ 2019-07-24 15:41:06

[[file:data/94/9d28e2-18db-480b-b48a-3dd7bc6c318f/Screenshot_20190724_154046_2019-07-24_15-41-05.png]]
*** Stored one file per day

#+BEGIN_SRC sh :exports both
  ls ~/org/journal | grep -P "2019-0[345]" | head -n 5
#+END_SRC

#+RESULTS:
| 2019-03-03 |
| 2019-03-06 |
| 2019-03-11 |
| 2019-03-12 |
| 2019-03-14 |
** org-datetree, org-reverse-datetree                               :ATTACH:
:PROPERTIES:
:ID:       db037348-eac0-4ab0-8ef1-0a482b86af95
:Attachments: org-reverse-datetree-1_2019-08-01_13-57-15.png org-reverse-datetree-1_2019-08-01_13-57-52.png
:END:

- Many entries in one file

#+DOWNLOADED: https://github.com/akirak/org-reverse-datetree/blob/master/screenshots/org-reverse-datetree-1.png?raw=true @ 2019-08-01 13:58:00
[[file:data/db/037348-eac0-4ab0-8ef1-0a482b86af95/org-reverse-datetree-1_2019-08-01_13-57-52.png]]

* Presentations
- *[[https://gitlab.com/oer/org-re-reveal][org-re-reveal]]*, [[https://github.com/yjwen/org-reveal][ox-reveal]], [[https://github.com/lorniu/ox-spectacle][ox-spectacle]], [[https://github.com/takaxp/org-tree-slide][org-treeslide]], [[https://github.com/eschulte/org-S5][org-S5]], [[https://github.com/eschulte/epresent][epresent]], [[https://github.com/fniessen/refcard-org-beamer][org-beamer]]

#+BEGIN_NOTES
  - org-re-reveal was forked from [[https://github.com/lechten/org-reveal][org-reveal]]
  - [[https://github.com/Malabarba/camcorder.el][camcorder.el]], [[https://gitlab.com/ambrevar/emacs-gif-screencast][emacs-gif-screencast]] (not specific to org-mode)
#+END_NOTES

* Tables/Spreadsheets

#+CAPTION: @>$2=vmin(@2..@-1)::@>$3=vmax(@2..@-1)::@>$4=vmean(@2..@-1)::@>$5=vsum(@2..@-1)
|----------+-----------+------------+------+-----|
| Item     | Low Value | High Value | Mean | Sum |
|----------+-----------+------------+------+-----|
| Hammer   |         1 |        100 |   10 |  11 |
| More     |         3 |        200 |   11 |   8 |
| Axe      |        20 |         25 |   30 |  13 |
|----------+-----------+------------+------+-----|
| *Total:* |         1 |        200 |   17 |  32 |
|----------+-----------+------------+------+-----|
#+TBLFM: @>$2=vmin(@2..@-1)::@>$3=vmax(@2..@-1)::@>$4=vmean(@2..@-1)::@>$5=vsum(@2..@-1)

- Each formula is separated with =::=
- =@= indicates the ROW (=@>= means *last row*)
- =$= indicates the COLUMN

** Live action                                                      :ATTACH:
:PROPERTIES:
:ID:       eea4d055-4294-46da-bbb3-572e573365b5
:Attachments: org-mode-demo-tables-2019-08-01_16.15.41_2019-08-01_16-18-36.gif
:END:

#+DOWNLOADED: file:///home/nickanderson/Videos/screencasts/org-mode-demo-tables-2019-08-01_16.15.41.gif @ 2019-08-01 16:18:40
[[file:data/ee/a4d055-4294-46da-bbb3-572e573365b5/org-mode-demo-tables-2019-08-01_16.15.41_2019-08-01_16-18-36.gif]]

** Referencing cells by name

#+CAPTION: $l=vmin(@2..@-1)::$h=vmax(@2..@-1)::$m=vmean(@2..@-1)::$s=vsum(@2..@-1)
|-----------+-----------+------------+------+-----|
| Item      | Low Value | High Value | Mean | Sum |
|-----------+-----------+------------+------+-----|
| Hammer    |        10 |         20 |   10 |  10 |
| Axe       |        20 |         25 |   30 |  13 |
|-----------+-----------+------------+------+-----|
| *^Total:* |        10 |         25 |   20 |  23 |
| ^         |         l |          h |    m |   s |
|-----------+-----------+------------+------+-----|
#+TBLFM: $l=vmin(@2..@-1)::$h=vmax(@2..@-1)::$m=vmean(@2..@-1)::$s=vsum(@2..@-1)

- =^= indicates field values on this line define names for the field ABOVE this row

* Task Management/Calendaring                                        :ATTACH:
:PROPERTIES:
:ID:       7ff90f9e-cbaa-406c-b881-ed63784c26f7
:Attachments: screenshot_2019-07-24_15-57-40.png
:END:

#+DOWNLOADED: /tmp/screenshot.png @ 2019-07-24 15:57:45
[[file:data/7f/f90f9e-cbaa-406c-b881-ed63784c26f7/screenshot_2019-07-24_15-57-40.png]]
** Keep agenda top of mind                                          :ATTACH:
:PROPERTIES:
:ID:       cdfddef3-766c-420e-bf3b-c6f2e09cd43b
:Attachments: idle-org-agenda_2019-07-25_12-52-30.gif
:END:

- [[https://github.com/enisozgen/idle-org-agenda][idle-org-agenda]]

#+DOWNLOADED: https://github.com/enisozgen/idle-org-agenda/blob/master/docs/idle-org-agenda.gif @ 2019-07-25 12:52:30
[[file:data/cd/fddef3-766c-420e-bf3b-c6f2e09cd43b/idle-org-agenda_2019-07-25_12-52-30.gif]]
* Going Mobile
| Android   | iOS       |
| *[[http://www.orgzly.com/][Orgzly]]*  | [[https://mobileorg.github.io/][MobileOrg]] |
| [[https://github.com/bnankiewicz/organic][Organic]]   | [[https://beorgapp.com][beorg]]     |
| [[https://github.com/matburt/mobileorg-android/][MobileOrg]] |           |
| [[https://github.com/wizmer/syncorg][SyncOrg]]   |           |
** Orgzly                                                           :ATTACH:
:PROPERTIES:
:ID:       25da2224-cc7f-450e-8ea0-38ca45ef5dbe
:Attachments: Orgzly-Notes-To-Do-Lists_2019-08-01_14-21-39.jpg
:END:

#+DOWNLOADED: https://alternatives.how2shout.com/wp-content/uploads/2019/07/Orgzly-Notes-To-Do-Lists.jpg @ 2019-08-01 14:21:46
 [[file:data/25/da2224-cc7f-450e-8ea0-38ca45ef5dbe/Orgzly-Notes-To-Do-Lists_2019-08-01_14-21-39.jpg]]

#+BEGIN_NOTES
  I use syncthing to keep my org files in sync across multiple devices.
  - Phone
  - Laptop
  - FileServer (FreeNAS)
  - Tablet 
#+END_NOTES
